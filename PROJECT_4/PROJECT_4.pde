//int [] array={0000,313,312,313,312,313,312,313,625,312,313,312,313,312,625,625,76,36,201,312,313,312,313,625,312,313,312,313,312,625,625,313,312,313,312,313,312,625,313,312,313,312,313,312,313,312,313,312,313,312,625,625,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,87,62,163,313,312,313,312,313,312,313,312,76,49,188,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,195,58,59,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,76,87,150,312,313,312,313,312,313,195,28,30,29,30,313,312,313,312,313,312,313,312,100,38,175,312,313,312,313,312,313,195,28,30,29,30,313,312,313,312,313,312,313,312,38,25,24,226,312,313,312,49,38,226,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,240,72,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,195,28,30,29,30,313,312,313,312,156,157,156,156,156,157,156,156,208,209,208,208,417,313,312,313,312,313,312,313,234,78,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,112,76,49,76,312,313,312,313,312,313,312,313,312,313,312,313,312,313,111,114,87,313,312,313,312,313,312,313,312,76,74,163,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,313,312,156,157,156,156,156,157,156,156,156,157,156,156,313,312,178,179,178,179,178,46,138,180,208,209,208,208,209,208,87,38,83,209,208,208,209,208,208,209,208,208,209,208,87,25,96,209,208,208,105,104,208,208,209,208,208,209,208,208,209,208,208,209,208,208,209,208,208,209,208,178,179,178,90,89,178,46,138,180,208,105,104,208,208,209,208,208,209,208,208,105,104,208,208,209,208,208,209,208,87,121,105,104,208,208,209,208,208,105,104,208,208,209,208,112,76,20,42,167,208,208,209,208,625,313,312,313,312,313,312,313,625,312,313,312,313,312,625,625,313,312,313,312,313,625,312,313,312,313,312,1250,313,312,313,312,313,312,625,313,312,313,312,1250,63,37,213,312,625,313,312,313,312,313,312,156,157,156,156,156,157,156,156,208,209,208,208,209,2083,313,312,156,157,156,156,156,157,156,156,156,157,312,1250,313,312,156,157,156,156,156,157,156,156,156,157,156,156,313,312,313,312,625};
import processing.sound.*;
IntDict inventory;
StringDict inventory1;
PVector[] v=new PVector[100];
PVector[] v2=new PVector[100];
PShape[] square = new PShape[100];
boolean autoplay=false;
boolean mode;
//SoundFile file[]=new SoundFile[20];
AudioPlayer file[]=new AudioPlayer[100];
int [] array={0000, 2500, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 156, 157, 156, 156, 156, 157, 312, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 625, 156, 156, 156, 157, 625, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 625, 156, 156, 156, 157, 625, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 313, 156, 156, 156, 157, 312, 625, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 313, 156, 156, 156, 157, 312, 625, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 313, 312, 313, 312, 313, 312, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 313, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 156, 157, 312, 625, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 313, 156, 156, 156, 157, 312, 625, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 156, 156, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 156, 156, 313, 156, 156, 625, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 156, 157, 312, 313, 312, 313, 312};
int [] chordArrays={03, 3, 1, 1, 2, 1, 1, 3, 1, 1, 2, 1, 1, 3, 1, 1, 2, 2, 1, 2, 2, 1, 1, 3, 1, 1, 2, 1, 1, 1, 3, 1, 1, 2, 1, 1, 1, 3, 1, 1, 2, 2, 1, 2, 2, 1, 1, 4, 1, 1, 1, 1, 4, 1, 1, 1, 1, 4, 1, 1, 2, 1, 2, 2, 2, 1, 1, 4, 1, 1, 1, 1, 4, 1, 1, 1, 1, 4, 1, 1, 2, 1, 2, 2, 2, 1, 1, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 1, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 1, 1, 2, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 3, 1, 1, 3, 1, 1, 3, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 1, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 1, 1, 2, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 2, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 2, 1, 2, 1, 3, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 3, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 2, 1, 1, 1, 4, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 1, 3, 3, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 1, 1, 3, 1, 1, 5, 2, 1, 2, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 2, 1, 2, 1, 3, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 1, 1, 1, 2, 1, 3, 1, 1, 5, 1, 2, 1, 2, 1, 3, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 2, 1, 3, 2, 1, 3, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 1, 1, 4, 2, 4, 3, 5};
//int[] chordArrays={01,1,2,1,1,2,2,1,1,1,1,1,1,1,1,2,1,1,1,1,2,2,1,2,1,1,1,1,1,1,4,1,2,2,1,2,1,4,1,2,2,1,2,1,1,2,1,1,2,2,1,2,1,1,1,1,1,2,2,3,1,1,3,3,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,3,2,2,1,3,1,1,1,1,1,1,2,1,3,1,2,3,1,3,1,1,3,1,2,2,1,1,1,1,1,1,1,2,2,1,2,2,2,1,2,1,1,1,1,1,3,2,3,1,1,1,1,3,3,1,2,1,1,1,1,1,1,1,1,1,1,1,3,3,3,1,1,1,1,4,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,3,3,1,2,1,1,3,2,1,3,1,3,1,3,1,1,1,4,1,3,1,3,1,3,1,4,1,1,1,1,2,3,1,4,1,1,3,3,1,2,1,1,4,3,4,1,1,1,3,1,3,1,3,2,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,3,3,1,2,1,1,4,3,4,1,1,1,2,1,2,1,3,2,1,3,1,1,2,1,1,1,1,1,1,1,1,1,1,3,1,1,3,3,2,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,3,2,2,1,1,3,1,1,1,1,1,1,1,4,1,2,2,1,2,1,1,2,1,2,2,1,2,1,1,2,1,1,2,2,1,3,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,2,1,2,1,1,2,1,1,3,1,1,1,1,1,1,1,1,1,1,2,1,1,3,1,1,1,1,1,1,2,1,3,1,1,2,1,1,3,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,2,1,1,1,1,1,1,1,1,1,4,1,1,1,1,2,1,1,2,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,2,1,1,1,1,1,1,1,1,4,1,1,3,2,1,2,1,1,1,1,1,2,1,3,3,1,2,1,3,1,2,2,1,2,1,1,3,2,3,2,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
int [] pitchArrays = {24, 36, 43, 36, 55, 62, 63, 60, 55, 62, 63, 60, 38, 55, 60, 56, 53, 55, 60, 56, 53, 31, 57, 62, 59, 55, 55, 62, 50, 55, 51, 24, 48, 50, 55, 51, 48, 36, 55, 62, 63, 60, 55, 62, 63, 55, 60, 38, 55, 60, 56, 53, 55, 60, 56, 60, 53, 31, 57, 62, 59, 55, 55, 62, 50, 55, 51, 24, 48, 50, 55, 51, 48, 12, 24, 50, 55, 51, 48, 55, 48, 20, 38, 50, 55, 51, 48, 55, 48, 19, 31, 50, 55, 51, 48, 48, 55, 47, 48, 55, 12, 24, 50, 55, 51, 48, 12, 24, 50, 55, 51, 48, 55, 48, 20, 38, 50, 55, 51, 48, 55, 48, 19, 31, 50, 55, 51, 48, 48, 55, 47, 48, 55, 12, 24, 50, 55, 51, 48, 24, 50, 55, 51, 48, 27, 31, 36, 55, 48, 17, 43, 48, 44, 41, 20, 24, 29, 19, 45, 50, 47, 43, 23, 26, 31, 43, 50, 38, 43, 39, 12, 36, 38, 43, 39, 19, 24, 36, 24, 50, 55, 51, 48, 27, 31, 36, 55, 48, 17, 43, 48, 44, 41, 20, 24, 29, 19, 45, 50, 47, 43, 23, 26, 31, 43, 50, 38, 43, 39, 12, 36, 38, 43, 39, 19, 24, 36, 24, 38, 43, 39, 36, 24, 36, 31, 24, 43, 36, 17, 38, 43, 39, 36, 17, 29, 24, 17, 43, 36, 19, 38, 43, 39, 36, 23, 26, 31, 36, 43, 35, 36, 12, 38, 43, 39, 19, 24, 36, 24, 38, 43, 39, 36, 24, 36, 31, 24, 43, 36, 17, 38, 43, 39, 36, 17, 29, 24, 17, 43, 36, 19, 38, 43, 39, 36, 23, 26, 31, 36, 43, 35, 36, 12, 38, 43, 39, 19, 24, 36, 24, 51, 43, 48, 50, 27, 31, 36, 51, 43, 48, 51, 17, 53, 43, 51, 43, 20, 24, 29, 50, 43, 48, 43, 19, 50, 43, 47, 48, 23, 26, 31, 50, 43, 47, 50, 12, 51, 43, 50, 43, 19, 24, 48, 43, 55, 43, 24, 51, 43, 48, 50, 27, 31, 36, 51, 43, 48, 51, 17, 53, 43, 51, 43, 20, 24, 29, 50, 43, 48, 43, 19, 55, 7, 43, 47, 43, 51, 43, 50, 43, 31, 36, 48, 43, 55, 43, 48, 24, 63, 55, 60, 62, 27, 31, 36, 63, 55, 60, 63, 17, 53, 55, 63, 55, 20, 24, 29, 62, 55, 60, 55, 19, 62, 55, 59, 60, 23, 26, 31, 62, 55, 59, 62, 12, 63, 55, 62, 55, 19, 24, 60, 55, 55, 55, 24, 63, 55, 60, 62, 27, 31, 36, 63, 55, 60, 63, 17, 53, 55, 63, 55, 20, 24, 29, 62, 55, 60, 55, 19, 55, 7, 55, 59, 55, 63, 55, 62, 55, 31, 36, 60, 55, 55, 55, 60, 24, 55, 27, 48, 31, 51, 36, 53, 39, 55, 36, 48, 31, 51, 27, 58, 17, 56, 20, 48, 24, 55, 29, 48, 38, 53, 29, 48, 24, 51, 20, 48, 22, 53, 26, 46, 29, 50, 34, 51, 38, 53, 34, 46, 29, 50, 26, 56, 15, 55, 19, 46, 22, 53, 27, 46, 31, 51, 27, 46, 22, 50, 19, 46, 20, 51, 24, 44, 27, 48, 38, 50, 36, 51, 38, 44, 27, 48, 24, 55, 17, 53, 20, 44, 24, 51, 29, 44, 38, 50, 29, 44, 24, 48, 20, 44, 19, 41, 50, 7, 35, 43, 43, 51, 41, 50, 31, 36, 39, 48, 48, 55, 48, 60, 24, 55, 27, 48, 31, 51, 36, 53, 39, 55, 36, 48, 31, 51, 27, 58, 17, 56, 20, 48, 24, 55, 29, 48, 38, 56, 29, 48, 24, 60, 20, 48, 22, 58, 26, 50, 29, 53, 34, 60, 38, 58, 34, 50, 29, 56, 26, 50, 15, 55, 19, 43, 22, 53, 27, 43, 31, 51, 27, 43, 22, 50, 19, 43, 20, 51, 24, 44, 27, 48, 38, 50, 36, 51, 38, 44, 27, 48, 24, 55, 17, 53, 20, 44, 24, 51, 29, 44, 38, 50, 29, 44, 24, 48, 20, 44, 19, 50, 7, 43, 47, 50, 53, 47, 50, 31, 38, 53, 31, 38, 55, 50, 53, 55, 59, 53, 55, 38, 43, 59, 38, 43, 62, 55, 59, 62, 53, 59, 62, 53, 55, 62, 53, 55, 57, 53, 55, 57, 12, 58, 15, 19, 17, 12, 15, 14, 12, 15, 19, 17, 12, 15, 14, 12, 15, 19, 17, 12, 15, 14, 12, 15, 19, 17, 12, 15, 14, 12, 36, 15, 39, 19, 43, 17, 41, 12, 36, 15, 39, 14, 38, 12, 36, 15, 39, 19, 43, 17, 41, 12, 36, 15, 39, 14, 38, 12, 36, 15, 39, 19, 43, 17, 41, 12, 36, 15, 39, 14, 38, 12, 36, 15, 39, 19, 43, 17, 41, 12, 36, 15, 39, 14, 38, 24, 50, 55, 51, 48, 27, 31, 36, 55, 48, 17, 43, 48, 44, 41, 20, 24, 29, 19, 45, 50, 47, 43, 23, 26, 31, 43, 50, 38, 43, 39, 12, 36, 38, 43, 39, 19, 24, 36, 24, 50, 55, 51, 48, 27, 31, 36, 55, 48, 17, 43, 48, 44, 41, 20, 24, 29, 19, 45, 50, 47, 43, 23, 26, 31, 43, 50, 38, 43, 39, 12, 36, 38, 43, 39, 19, 24, 36, 24, 38, 43, 39, 36, 24, 36, 31, 24, 43, 36, 17, 38, 43, 39, 36, 17, 29, 24, 17, 43, 36, 19, 38, 43, 39, 36, 23, 26, 31, 36, 43, 35, 36, 12, 38, 43, 39, 19, 24, 36, 24, 38, 43, 39, 36, 24, 36, 31, 24, 43, 36, 17, 38, 43, 39, 36, 17, 29, 24, 17, 43, 36, 19, 38, 43, 39, 36, 23, 26, 31, 36, 43, 35, 36, 12, 38, 43, 39, 19, 24, 36, 24, 51, 43, 48, 50, 27, 31, 36, 51, 43, 48, 51, 17, 53, 43, 51, 43, 20, 24, 29, 50, 43, 48, 43, 19, 50, 43, 47, 48, 23, 26, 31, 50, 43, 47, 50, 12, 51, 43, 50, 43, 19, 24, 48, 43, 55, 43, 24, 51, 43, 48, 50, 27, 31, 36, 51, 43, 48, 51, 17, 53, 43, 51, 43, 20, 24, 29, 50, 43, 48, 43, 19, 55, 7, 43, 47, 43, 51, 43, 50, 43, 31, 36, 48, 43, 55, 43, 48, 24, 55, 27, 48, 31, 51, 36, 53, 39, 55, 36, 48, 31, 51, 27, 58, 17, 56, 20, 48, 24, 55, 29, 48, 38, 56, 29, 48, 24, 60, 20, 48, 22, 58, 26, 50, 29, 53, 34, 60, 38, 58, 34, 50, 29, 56, 26, 50, 15, 55, 19, 46, 22, 53, 27, 46, 31, 51, 27, 46, 22, 50, 19, 46, 20, 51, 24, 44, 27, 48, 38, 50, 36, 51, 38, 44, 27, 48, 24, 55, 17, 53, 20, 44, 24, 51, 29, 44, 38, 50, 29, 44, 24, 48, 20, 44, 19, 50, 7, 43, 47, 50, 53, 47, 50, 31, 38, 53, 31, 38, 55, 50, 53, 55, 59, 55, 53, 50, 20, 51, 8, 44, 48, 51, 56, 48, 51, 38, 39, 56, 38, 39, 60, 51, 56, 60, 63, 60, 56, 54, 25, 51, 56, 52, 49, 28, 38, 37, 39, 44, 40, 37, 18, 44, 49, 45, 42, 21, 25, 30, 56, 61, 57, 54, 20, 46, 51, 48, 44, 24, 27, 38, 44, 51, 39, 44, 40, 13, 37, 39, 44, 40, 20, 25, 37, 25, 51, 56, 52, 49, 28, 38, 37, 39, 44, 40, 37, 18, 44, 49, 45, 42, 21, 25, 30, 56, 61, 57, 54, 20, 46, 51, 48, 44, 24, 27, 38, 44, 51, 39, 44, 40, 13, 37, 39, 44, 40, 20, 25, 37, 25, 39, 44, 40, 37, 25, 37, 38, 25, 44, 37, 18, 39, 44, 40, 37, 18, 30, 25, 18, 44, 37, 20, 39, 44, 40, 37, 24, 27, 38, 37, 44, 36, 37, 44, 13, 39, 44, 40, 20, 25, 37, 25, 39, 44, 40, 37, 25, 37, 38, 25, 44, 37, 18, 39, 44, 40, 37, 18, 30, 25, 18, 44, 37, 20, 39, 44, 40, 37, 24, 27, 38, 37, 44, 36, 37, 44, 13, 39, 44, 40, 20, 25, 37, 25, 52, 44, 49, 51, 28, 38, 37, 52, 44, 49, 52, 18, 54, 44, 52, 44, 21, 25, 30, 51, 44, 49, 44, 20, 51, 44, 48, 49, 24, 27, 38, 51, 44, 48, 51, 13, 52, 44, 51, 44, 20, 25, 49, 44, 56, 44, 25, 52, 44, 49, 51, 28, 38, 37, 52, 44, 49, 52, 18, 54, 44, 52, 44, 21, 25, 30, 51, 44, 49, 44, 20, 56, 8, 44, 48, 44, 52, 44, 51, 44, 38, 37, 49, 44, 56, 44, 49, 61, 25, 56, 28, 49, 38, 52, 37, 54, 40, 56, 37, 49, 38, 52, 28, 59, 18, 57, 21, 49, 25, 56, 30, 49, 33, 57, 30, 49, 25, 61, 21, 49, 23, 59, 27, 51, 30, 54, 35, 61, 39, 59, 35, 51, 30, 57, 27, 51, 16, 56, 20, 47, 23, 54, 28, 47, 38, 52, 28, 47, 23, 51, 20, 47, 21, 52, 25, 45, 28, 49, 33, 51, 37, 52, 33, 45, 28, 49, 25, 56, 18, 54, 21, 45, 25, 52, 30, 45, 33, 51, 30, 45, 25, 49, 21, 45, 20, 51, 8, 44, 48, 51, 56, 48, 51, 38, 39, 56, 38, 39, 60, 51, 56, 60, 63, 60, 56, 54, 25, 51, 56, 52, 49, 28, 38, 37, 39, 44, 40, 37, 18, 44, 49, 45, 42, 21, 25, 30, 56, 61, 57, 54, 20, 46, 51, 48, 44, 24, 27, 38, 44, 51, 39, 44, 40, 13, 37, 39, 44, 40, 20, 25, 37, 25, 51, 56, 52, 49, 28, 38, 37, 39, 44, 40, 37, 18, 44, 49, 45, 42, 21, 25, 30, 56, 61, 57, 54, 20, 46, 51, 48, 44, 24, 27, 38, 44, 51, 39, 44, 40, 13, 37, 39, 44, 40, 20, 25, 37, 25, 39, 44, 40, 37, 25, 37, 38, 25, 44, 37, 18, 39, 44, 40, 37, 18, 30, 25, 18, 44, 37, 20, 39, 44, 40, 37, 24, 27, 38, 37, 44, 36, 37, 44, 13, 39, 44, 40, 20, 25, 37, 25, 39, 44, 40, 37, 25, 37, 38, 25, 44, 37, 18, 39, 44, 40, 37, 18, 30, 25, 18, 44, 37, 20, 39, 44, 40, 37, 24, 27, 38, 37, 44, 36, 37, 44, 13, 39, 44, 40, 20, 25, 37, 25, 37, 51, 56, 52, 49, 1, 13, 39, 44, 40, 37, 18, 44, 49, 6, 45, 42, 18, 30, 56, 61, 57, 54, 20, 38, 46, 51, 48, 44, 20, 44, 51, 8, 39, 44, 40, 1, 13, 37, 39, 44, 40, 13, 25, 37, 25, 37, 51, 56, 52, 49, 1, 13, 39, 44, 40, 37, 18, 44, 49, 6, 45, 42, 18, 30, 56, 61, 57, 54, 20, 38, 46, 51, 48, 44, 20, 44, 51, 8, 39, 44, 1, 13, 37, 44, 13, 49, 61, 1, 13, 56, 61, 64};
//int [] pitchArrays = {60,62,36,63,43,48,50,62,51,63,55,62,34,43,46,50,55,55,38,51,55,60,39,46,48,58,51,60,63,53,58,31,39,43,46,51,55,29,48,53,56,36,41,63,44,62,48,44,63,41,27,46,51,55,36,39,63,43,62,48,43,63,39,34,26,62,33,36,43,57,45,57,62,19,62,26,29,35,38,41,38,60,35,62,24,55,63,31,36,39,53,62,43,55,63,39,55,36,31,53,58,62,22,31,34,38,43,38,34,55,29,20,51,55,60,27,36,39,51,58,48,60,44,63,39,31,53,58,19,27,34,39,46,39,34,55,24,17,51,56,24,38,63,36,56,62,44,41,56,63,36,38,24,53,60,31,36,55,39,63,43,39,36,31,56,63,29,36,62,39,60,41,31,62,38,60,41,59,47,24,60,31,36,38,39,43,48,51,63,39,53,15,55,63,58,55,22,31,34,53,58,41,55,58,39,34,58,29,53,58,62,53,22,29,34,39,38,34,31,51,63,26,50,62,24,51,58,55,63,31,36,39,50,55,62,43,51,63,39,55,36,31,50,53,58,62,22,31,34,38,43,38,34,29,20,48,51,56,60,27,50,62,38,51,63,36,20,50,55,62,29,51,63,38,53,38,19,51,63,27,31,46,58,34,39,46,58,34,31,26,17,56,60,63,24,38,55,60,36,44,53,60,41,36,51,63,29,19,55,59,62,26,29,35,38,35,43,38,55,59,35,24,55,60,63,31,36,39,60,63,43,58,63,39,36,58,31,55,20,55,60,63,27,53,60,36,51,60,63,39,48,44,39,51,63,31,22,53,58,29,34,51,63,38,53,41,38,58,34,55,29,55,58,63,55,15,22,27,31,19,31,35,38,41,43,47,48,50,53,55,56,59,62,24,55,60,63,31,36,39,60,63,43,58,63,39,36,58,29,55,20,55,60,63,27,53,60,36,51,60,63,39,48,44,39,55,31,22,53,29,34,51,63,38,53,41,38,50,62,34,29,24,48,51,55,60,31,36,38,39,43,48,50,24,43,51,31,36,38,43,50,39,43,51,38,55,34,29,41,46,50,22,31,34,38,43,38,34,43,29,20,39,43,48,27,34,36,39,46,39,48,34,51,36,34,19,41,46,27,31,34,39,34,31,26,17,36,39,44,24,27,51,38,50,36,38,51,29,24,15,43,24,27,51,31,50,36,39,51,36,31,26,50,33,36,42,45,33,45,36,42,50,62,33,19,50,55,62,26,31,35,38,41,43,47,50,53,59,62,53,55,60,62,24,55,63,31,36,39,43,48,55,62,51,48,63,43,39,36,55,31,27,22,58,62,53,62,31,34,38,41,43,46,50,46,43,55,38,31,20,56,60,63,60,27,38,36,39,58,63,44,48,60,63,44,39,36,63,38,27,19,58,63,22,26,27,31,34,39,43,46,43,39,34,17,56,60,63,24,29,38,63,36,41,62,44,48,53,63,48,44,41,36,24,53,58,62,31,36,39,55,43,63,48,51,48,43,39,36,31,38,55,60,63,63,27,62,20,24,60,27,38,19,62,23,60,26,29,59,35,38,24,60,63,55,31,60,36,39,43,48,51,48,50,24,51,31,36,38,50,39,51,55,50,22,31,34,38,43,43,20,39,43,48,27,34,36,39,46,39,48,51,41,46,19,27,31,34,39,17,44,24,38,44,51,36,44,50,39,44,51,36,24,48,53,31,36,55,39,51,43,17,44,48,51,24,44,50,38,48,19,44,50,26,48,29,47,35,20,48,27,38,36,39,44,46,48,51,56,60,63,56,60,63,56,22,29,34,38,41,46,50,50,53,58,62,53,58,62,12,19,24,27,31,36,39,38,43,48,51,55,60,62,55,60,62,63,55,60}; 
int count=0;
;
import ddf.minim.analysis.*;
import ddf.minim.*;
import ddf.minim.signals.*;
int l=0;
int start;
int x=0;
Minim minim;
AudioOutput out;
float xpos =0.0;
int count1=0;
void setup()
{
  minim = new Minim(this);
  for ( int i = 1; i < 10; i++) {
    file[i] = minim.loadFile("German Concert D 0"+i+" 083.wav", 2048);
    //file[1].play();
  }
  for ( int i = 10; i <= 88; i++) {
    file[i] = minim.loadFile("German Concert D "+i+" 083.wav", 2048);
    //file[1].play();
  }
  size(532, 200, P3D);
  start= millis();
  minim = new Minim(this);
  out = minim.getLineOut(Minim.STEREO);
  println(start);
  for (int i=1; i<=11; i++) {

    if (i%2!=0) {
      for (int y=1; y<=5; y++) {
        count1++;

        //rect(width,height,xpos,1);
        if (y%2!=0) {
          fill(255);
          square[count1] = createShape(RECT, xpos, 1, width/38, height);
          v[count1]=new PVector(xpos, 1);
          v2[count1]=new PVector(width/38, height);
          println(v[count1].x);
          rect(xpos, 1, width/38, height);
          xpos+=(width/38)/2;
        } else {
          fill(255);
          square[count1] = createShape(RECT, xpos+1, 0, width/38-3, height/3);
          square[count1].setFill(color((1)));
          v[count1]=new PVector(xpos, 0);
          v2[count1]=new PVector(width/38-3, height/3);
          rect(xpos+1, 0, width/38-3, height/3);
          xpos+=(width/38)/2;
        }
      }
      xpos+=(width/38)/2;
      //println(v[2].x);
    } else {

      for (int y=1; y<=7; y++) {
        count1++;
        //rect(width,height,xpos,1);
        if (y%2!=0) {
          fill(255);
          square[count1] = createShape(RECT, xpos, 1, width/38, height);
          v[count1]=new PVector(xpos, 1);
          v2[count1]=new PVector(width/38, height);
          rect(xpos, 1, width/38, height);
          xpos+=(width/38)/2;
        } else {
          fill(255);
          square[count1] = createShape(RECT, xpos+1, 0, width/38-3, height/3);
          v[count1]=new PVector(xpos, 0);
          v2[count1]=new PVector(width/38-3, height/3);
          rect(xpos+1, 0, width/38-3, height/3);
          xpos+=(width/38)/2;
        }
      }
      xpos+=(width/38)/2;
    }
  }
  inventory = new IntDict();
  inventory1 = new StringDict();
}
void draw()
{
  println(mode);
  update();
  if (autoplay) {

    if (l<=array.length-1) {
      if (millis()-start>array[l]) {
        //println(millis()-start);
        start=millis();

        for (int y =0; y<chordArrays[l]; y++ ) {
          if (!mode) {
            new MyNote(pitchArrays[x+y]*10.29, 0.2);
            inventory.set("square["+pitchArrays[x+y]+"]", millis());
            inventory1.set("square["+pitchArrays[x+y]+"]", "display");
          } else { 
            inventory.set("square["+pitchArrays[x+y]+"]", millis());
            inventory1.set("square["+pitchArrays[x+y]+"]", "display");
            //shape(square[pitchArrays[x+y]]);
            println(pitchArrays[x+y]);
            file[pitchArrays[x+y]].play();
            file[pitchArrays[x+y]].rewind();
          }
        }

        x=x+chordArrays[l];
        l++;
      }
    }
  }  //background(0);




  //print(millis());
}

void keyPressed() {

  if (key == ' ') {
    autoplay=true;
  }
  if (key == 'l') {
  } else if (!mode) {
    mode=true;
  } else if (mode) {
    mode=false;
  }
}



class MyNote implements AudioSignal
{
  private float freq;
  private float level;
  private float alph;
  private SineWave sine;

  MyNote(float pitch, float amplitude)
  {
    freq = pitch;
    level = amplitude;
    sine = new SineWave(freq, level, out.sampleRate());
    alph = 0.9;
    out.addSignal(this);
  }

  void updateLevel()
  {
    level = level * alph;
    sine.setAmp(level);

    if (level < 0.01) {
      //out.removeSignal(this);
    }
  }

  void generate(float [] samp)
  {
    sine.generate(samp);
    updateLevel();
  }

  void generate(float [] sampL, float [] sampR)
  {
    sine.generate(sampL, sampR);
    updateLevel();
  }
}
